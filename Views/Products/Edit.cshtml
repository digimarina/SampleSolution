@model SampleProject.Models.Products
@{
    ViewBag.Title = "Edit";
}

<div class="container">
<h2>Edit Product</h2>
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.ProductID)
    @Html.HiddenFor(x => x.ImageName)
    @Html.HiddenFor(x => x.ImagePath)
    <div class="row">
        <div class="col-md-6">
            <label>Product Name</label>
            @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @id = "Name", @placeholder = "Product Name", @required = "required" } })
        </div>
        <div class="col-md-6">
            <label>Description</label>
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @id = "Description", @placeholder = "Product Description", @required = "required" } })
        </div>
        <div class="col-md-6">
            <label>Stock Available</label>
            @Html.TextBoxFor(model => model.StockAvailable, new { htmlAttributes = new { @id = "StockAvailable", @placeholder = "Stock Available", @required = "required" } })
        </div>
        <div class="col-md-6">
            <label>Price</label>
            @Html.TextBoxFor(model => model.Price, new { htmlAttributes = new { @id = "Price", @placeholder = "Price", @required = "required" } })
        </div>
    </div>
    <div id="divImage">
        @if (!String.IsNullOrEmpty(Model.ImagePath))
        {
            <div class="form-group row">
                <label class="col-md-3 label-control">Image</label>
                <div class="col-md-9">
                    <img id="imgImage" class="img-fluid" width="250" src="../../@Model.ImagePath/@Model.ImageName" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-md-3 label-control"></label>
                <div class="col-md-9">
                    <a class="btn btn-primary" onclick="jsRemoveCurrentImage()">
                        Remove Image
                    </a>
                </div>
            </div>
            <div id="divimage">
                <div class="form-group row">
                    <label class="col-md-3 label-control">Add New Image</label>
                    <div class="col-md-6">
                        <input type="file" class="form-control" value="Upload" multiple accept="image/*" id="image" name="image" />
                    </div>
                    <div class="col-md-3">
                        <a class="btn btn-danger" onclick="jsClearImage()">
                            Remove
                        </a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div id="divimage">
                <div class="form-group row">
                    <label class="col-md-3 label-control">Add New Image</label>
                    <div class="col-md-6">
                        <input type="file" class="form-control" value="Upload" id="image" name="image" required title="Please add an image." />
                    </div>
                    <div class="col-md-3">
                        <a class="btn btn-danger" onclick="jsClearImage()">
                            Remove
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
        <button type="submit" onclick="Update()" class="btn btn-primary">Update</button>
        <a class="btn btn-default" href="@Url.Action("Index", "Products")">Back</a>
    <div id="snackbar"><span></span></div>
</div>
@section scripts{
    <script>
        function Update() {

            var products = {
                ProductID: document.getElementById("ProductID").value,
                Name: document.getElementById("Name").value,
                Description: document.getElementById("Description").value,
                StockAvailable: document.getElementById("StockAvailable").value,
                Price: document.getElementById("Price").value,
                ImagePath: document.getElementById("ImagePath").value,
                ImageName: document.getElementById("ImageName").value,
            };

            var formData = new FormData();
            formData.append("formData", JSON.stringify(products));

                var file = document.getElementById('image').files[0];
                formData.append("image", file);

          $.ajax({
           type: 'POST',
           url: '@Url.Action("Edit", "Products")',
              data: formData,
           processData: false,
           contentType: false,
           success: function (data) {
               if (data.success) {
                   window.location.href = "@Url.Action("Index", "Products")";
               }
               else {
                   ErrorNotice(true);
               }
           }
          });
        }
    </script>
    <script>
        function ErrorNotice(bool) {
            if (bool) {
                var x = document.getElementById("snackbar");
                $("#snackbar").text('There was an error saving the product.');
                // Add the "show" class to DIV
                x.className = "show";
                // After 3 seconds, remove the show class from DIV
                setTimeout(function () { x.className = x.className.replace("show", ""); }, 10000);
            }
        });
    </script>
    <script>
        function jsClearImage() {
            $("#image").val('');
        }
    </script>
    <script type="text/javascript">
        function jsRemoveCurrentImage() {
            var imgImage = document.getElementById('imgImage');
            if (imgImage != null) {
                imgImage.parentNode.removeChild(imgImage);
            }
        }
    </script>
}
